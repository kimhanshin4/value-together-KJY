plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '6.11.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.vt'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

ext {
    asciidocVersion = "2.0.6.RELEASE"
    snippetsDir = file('build/generated-snippets')
}

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // oauth2
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '6.2.1'

    // aws
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.623'
//    implementation group: 'com.amazonaws', name: 'aws-java-sdk-secretsmanager', version: '1.12.625'
//    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'

    // restdocs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'capital.scalable:spring-auto-restdocs-core:2.0.11'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
}

spotless {
    java {
        // 사용하지 않는 import 제거
        removeUnusedImports()
        // 구글 자바 포맷 적용
        googleJavaFormat()
        indentWithTabs(2)
        indentWithSpaces(4)
        // 공백 제거
        trimTrailingWhitespace()
        // 끝부분 New Line 처리
        endWithNewline()
    }
}

// 의존성을 설정해줌 test 끝나고 spotlessjava 수행되도록
tasks.named("spotlessJava").configure { dependsOn("compileTestJava") }

tasks.named('test') {
    useJUnitPlatform()
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

bootJar {
    dependsOn asciidoctor
    copy {
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}
